workflows:
  ios-workflow:
    name: ios_workflow
    environment:
      groups:
        - certificate_credentials
        # - app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      #   - ios_config # <-- (Includes APP_STORE_APP_ID)
       # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
      # vars:
      #   XCODE_PROJECT: "CICD.xcodeproj"  # PUT YOUR WORKSPACE NAME HERE
      #   XCODE_SCHEME: "CICD" # PUT THE NAME OF YOUR SCHEME HERE
      #   # BUILD_NUMBER: 1
      xcode: latest
      # cocoapods: default
    scripts:
      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
        script: |
                  keychain initialize
      - name: Set up Provisioning profiles from environment variables
        script: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
          echo "Saved provisioning profile $PROFILE_PATH"      
      - name: Set up signing certificate  
        script: |
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          if [ -z ${CM_CERTIFICATE_PASSWORD+x} ]; then
            # when using a certificate that is not password-protected
            keychain add-certificates --certificate /tmp/certificate.p12
          else
            # when using a password-protected certificate
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
          fi      
      # - name: Fetch signing files
      #   script: |
      #               app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_DEVELOPMENT --create
      # - name: Add certificates to keychain
      #   script: |
      #               keychain add-certificates 
      # - name: Increment build number
      #   script: |
      #     # increment build number
      #     #!/bin/sh
      #     set -e
      #     set -x
      #     cd $FCI_BUILD_DIR
      #     agvtool new-version -all $(($BUILD_NUMBER +1))
      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles
      - name: Build ipa for distribution
        script: xcode-project build-ipa --project /Users/er_macbook_225/Documents/CICD/CICD/CICD.xcodeproj --scheme CICD
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    # publishing:
    #   app_store_connect:
    #     api_key: $APP_STORE_CONNECT_PRIVATE_KEY      # Contents of the API key
    #     key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER    # Alphanumeric value that identifies the API key
    #     issuer_id: $APP_STORE_CONNECT_ISSUER_ID      # Alphanumeric value that identifies who created the API key
    #     submit_to_testflight: false        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.
      # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
      #     - group name 1
      #     - group name 2